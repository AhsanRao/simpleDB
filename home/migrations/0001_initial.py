# Generated by Django 4.1.12 on 2024-01-27 14:49

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Business",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "db_table": "business",
            },
        ),
        migrations.CreateModel(
            name="Contract",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("installation_date", models.DateField()),
                (
                    "monthly_charges",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("billing_date", models.DateField()),
                ("renewal_date", models.DateField()),
                ("role", models.CharField(max_length=255)),
                (
                    "business",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="home.business",
                    ),
                ),
            ],
            options={
                "db_table": "contracts",
            },
        ),
        migrations.CreateModel(
            name="ContractItem",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "contract",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="home.contract"
                    ),
                ),
            ],
            options={
                "db_table": "contract_items",
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
                ("info", models.CharField(default="", max_length=100)),
                ("price", models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("first_name", models.CharField(max_length=255)),
                ("last_name", models.CharField(max_length=255)),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female"), ("O", "Other")],
                        max_length=1,
                    ),
                ),
                ("email", models.EmailField(max_length=255, unique=True)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("ADMIN", "Administrator"),
                            ("CLIENT", "Client"),
                            ("EXEC", "Executive"),
                            ("LEGAL", "Legal"),
                            ("ACCT", "Accountant"),
                        ],
                        max_length=255,
                    ),
                ),
                ("street", models.CharField(max_length=255)),
                ("city", models.CharField(max_length=255)),
                ("state", models.CharField(max_length=255)),
                ("zipcode", models.CharField(max_length=255)),
                ("country", models.CharField(max_length=255)),
                (
                    "home_phone_number",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "business_phone_number",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "business",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="home.business",
                    ),
                ),
                (
                    "contract_items",
                    models.ManyToManyField(
                        through="home.ContractItem", to="home.person"
                    ),
                ),
            ],
            options={
                "db_table": "persons",
            },
        ),
        migrations.CreateModel(
            name="Item",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("asset_tag_number", models.CharField(max_length=255, unique=True)),
                ("item_name", models.CharField(max_length=255)),
                ("serial_number", models.CharField(max_length=255, unique=True)),
                ("install_date", models.DateField()),
                (
                    "business",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="home.business",
                    ),
                ),
                (
                    "contract_items",
                    models.ManyToManyField(
                        through="home.ContractItem", to="home.contract"
                    ),
                ),
            ],
            options={
                "db_table": "items",
            },
        ),
        migrations.AddField(
            model_name="contractitem",
            name="item",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="home.item"
            ),
        ),
        migrations.AddField(
            model_name="contractitem",
            name="person",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="home.person",
            ),
        ),
        migrations.AddField(
            model_name="contract",
            name="contract_items",
            field=models.ManyToManyField(through="home.ContractItem", to="home.item"),
        ),
        migrations.AddField(
            model_name="contract",
            name="person",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="home.person"
            ),
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("ADMIN", "Admin"),
                            ("OWNER", "Owner"),
                            ("STAFF", "Staff"),
                        ],
                        max_length=10,
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "business",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="home.business",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        related_name="%(app_label)s_%(class)s_related",
                        related_query_name="%(app_label)s_%(class)ss",
                        to="auth.group",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        related_name="%(app_label)s_%(class)s_related",
                        related_query_name="%(app_label)s_%(class)ss",
                        to="auth.permission",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Owner",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("home.user",),
        ),
        migrations.CreateModel(
            name="Staff",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("home.user",),
        ),
        migrations.AlterUniqueTogether(
            name="contractitem",
            unique_together={("contract", "item")},
        ),
    ]
